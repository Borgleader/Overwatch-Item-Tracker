#hero-header {
  .hero-info {
    display: flex;
    align-items: center;
    height: $page-header-height;
  }

  .hero-image {
    display: none;
  }

  .hero-name {
    display: inline-block;
    padding-left: ($page-header-height - ($page-title-font-size - 1rem)) / 2; // Using 11rem instead of 12 to account for the extra empty space between the defined font size and the actual size of Big Noodle

    @include page-title(hero);
  }

  .hero-class {
    font-size: 0;
    box-sizing: content-box;
    background-size: 2.8rem;
    display: inline-block;
    height: 2.8rem;
    width: 2.8rem;
    border: 2px solid rgba(255, 255, 255, 0.4);
    border-radius: 50%;
    padding: 1.2rem;
    background-position: center;
    background-repeat: no-repeat;
    margin-top: -2.8rem * 2.5;
    margin-left: 1rem;

    @include slidein;
  }

  // Generates base CSS for classes
  @each $classname in $classes {
    .hero-class.#{$classname} {
      background-image: url('resources/icons/roles/#{$classname}.svg');
    }
  }

  .options {
    position: absolute;
    bottom: $progress-bar-height + $gutter-width;
    right: $gutter-width;
  }
}

// Generate hero-specific CSS
@each $heroname, $data in $heroes {
  $colors: map-get($data, 'colors');


  body##{$heroname} {
    #hero-container #hero-header {
      background-image: url('resources/heroes/#{$heroname}/background-story.jpg');

      @if map-has-key($heroes-additional, $heroname) {
        @include additionalProperties($heroes-additional, $heroname);
      }
    }
  }
}

body#all .hero-class {
  display: none;
}
