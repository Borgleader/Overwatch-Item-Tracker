@import "include/variables-and-mixins";

// Generates base CSS for classes
@each $classname in $class {
    #class-#{$classname} {
        background-image: url('resources/icons/roles/#{$classname}.svg');
    }
}

// Generate hero-specific CSS
@each $heroname, $data in $hero {
    $colors: map-get($data, 'colors');
    $class: map-get($data, 'class');

    // Extend the base class to just add on to it, avoiding extra t h i c c CSS
    body##{$heroname} .hero-name:after {
        @extend #class-#{$class};
    }

    body##{$heroname} {
        #hero-container .hero-overview {
            background-image: url('resources/heroes/#{$heroname}/background-story.jpg');
        }
    }

    body##{$heroname} .hero-progress-bar,
    #hero-nav .gallery.hero .block[href$="/#{$heroname}"] .hero-progress-bar {
        background-color: map-get($colors, 'primary');
        border-top-color: map-get($colors, 'highlight');
    }
}

// Generate event-specific
@each $eventname, $data in $events {
    $colors: map-get($data, 'colors');

    body##{$eventname} {
        #header .header-content:before {
            background-image: url('../../../resources/updates/#{$eventname}/logo.png');
        }
    }

    body##{$eventname}:before,
    #hero-nav .gallery.event .block[href$="/#{$eventname}"] {
        background-image: url('resources/#{$eventname}/bg.jpg');
    }

    .item[event="#{$eventname}"]+.tooltip .preview.img {
        background: url('resources/#{$eventname}/icon-bg.png') no-repeat,
                    url('resources/#{$eventname}/preview-bg.png');
    }
}